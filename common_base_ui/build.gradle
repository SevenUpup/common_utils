plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id "com.vanniktech.maven.publish" version "0.23.1"
    id("org.jetbrains.dokka") version ("1.4.32")
}

android {
    namespace 'com.fido.common.common_base_ui'
    compileSdk versions.compileSdk

    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.targetSdk
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    // Kotlin项目生成DOC Start
    tasks.named("dokkaJavadoc") {
        outputDirectory.set(new File("$rootDir/javadoc"))
    }

    dokkaJavadoc {
        dokkaSourceSets {
            configureEach { // Or source set name, for single-platform the default source sets are `main` and `test`
                // Disable linking to online kotlin-stdlib documentation
                noStdlibLink.set(true)
                // Disable linking to online JDK documentation
                noJdkLink.set(true)
                // Disable linking to online Android documentation (only applicable for Android projects)
                noAndroidSdkLink.set(true)
            }
        }
    }

    task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
        group = 'jar'
        archiveClassifier.set('javadoc')
        from "$rootDir/javadoc"
    }
    // Kotlin项目生成DOC End

}

dependencies {
    // Kotlin项目生成DOC
    dokkaPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.4.32")

//    implementation 'androidx.core:core-ktx:1.7.0'
//    implementation 'androidx.appcompat:appcompat:1.4.1'
//    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    //仅运行时依赖
    implementation deps.android.kt_ktx
    implementation deps.android.recyclerview
    implementation deps.android.appcompat
    implementation deps.android.material
    implementation deps.android.constraint_layout

    // brvah-4.0
    api(deps.support.brvah){
        exclude group: 'androidx.recyclerview'
        exclude group: 'androidx.appcompat'
        exclude group: 'com.google.android.material'
    }

    //XPopup弹窗
    api(deps.support.xpopup) {
//        exclude group: 'com.github.bumptech.glide', module: 'glide'
        exclude group: 'androidx.recyclerview'
        exclude group: 'androidx.appcompat'
        exclude group: 'com.google.android.material'
    }

    //smartrefreshlayout
    api  'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    api  'io.github.scwang90:refresh-header-classics:2.0.5'    //经典刷新头
    api  'io.github.scwang90:refresh-header-material:2.0.5'    //谷歌刷新头
    api  'io.github.scwang90:refresh-header-two-level:2.0.5'   //二级刷新头
    api  'io.github.scwang90:refresh-footer-classics:2.0.5'    //经典加载

    // glide
    api deps.support.glide

    //图片选择
    api deps.support.picture_selector
    api deps.support.picture_compress
    api deps.support.picture_ucrop

    //郭神 permissionX
    api deps.support.permission
}

import com.vanniktech.maven.publish.SonatypeHost
if (!USE_MAVEN_PLUGIN){
    apply from: rootProject.file('publish-maven-arr.gradle')
}else {
    mavenPublishing {
        coordinates(GROUP_ID, POM_ARTIFACT_ID, VERSION_NAME)
        pom {
            name = POM_ARTIFACT_ID
            description = POM_DESCRIPTION
            inceptionYear = POM_INCEPTION_YEAR
            url = POM_URL
            licenses {
                license {
                    name = POM_LICENSE_NAME
                    url = POM_LICENSE_URL
                    distribution = POM_LICENSE_DIST
                }
            }
            developers {
                developer {
                    id = POM_DEVELOPER_ID
                    name = POM_DEVELOPER_NAME
                    url = POM_DEVELOPER_URL
                }
            }
            scm {
                url = POM_SCM_URL
                connection = POM_SCM_CONNECTION
                developerConnection = POM_SCM_DEV_CONNECTION
            }
        }
        publishToMavenCentral(SonatypeHost.S01)
        signAllPublications()
    }
}